import pprint
from tools import *


class Solution(object):
    @print_
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        row = len(board)
        for i in range(row):
            row_tag = set()
            col_tag = set()
            cell_tag = set()
            for j in range(row):
                # row
                if board[i][j] != '.':
                    if board[i][j] in row_tag:
                        return False
                    else:
                        row_tag.add(board[i][j])
                # column
                if board[j][i] != '.':
                    if board[j][i] in col_tag:
                        return False
                    else:
                        col_tag.add(board[j][i])
                print(i, j, col_tag)
                # cell
                i_ = (i // 3) * 3 + (j // 3)
                j_ = (i % 3) * 3 + (j % 3)
                if board[i_][j_] != '.':
                    if board[i_][j_] in cell_tag:
                        return False
                    else:
                        cell_tag.add(board[i_][j_])
        return True


solution = Solution().isValidSudoku
solution(board=
         [["5", "3", ".", ".", "7", ".", ".", ".", "."],
          ["6", ".", ".", "1", "9", "5", ".", ".", "."],
          [".", "9", "8", ".", ".", ".", ".", "6", "."],
          ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
          ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
          ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
          [".", "6", ".", ".", ".", ".", "2", "8", "."],
          [".", ".", ".", "4", "1", "9", ".", ".", "5"],
          [".", ".", ".", ".", "8", ".", ".", "7", "9"]])

solution(board=
         [["8", "3", ".", ".", "7", ".", ".", ".", "."],
          ["6", ".", ".", "1", "9", "5", ".", ".", "."],
          [".", "9", "8", ".", ".", ".", ".", "6", "."],
          ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
          ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
          ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
          [".", "6", ".", ".", ".", ".", "2", "8", "."],
          [".", ".", ".", "4", "1", "9", ".", ".", "5"],
          [".", ".", ".", ".", "8", ".", ".", "7", "9"]])

solution(board=
         [[".", ".", "4", ".", ".", ".", "6", "3", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "."],
          ["5", ".", ".", ".", ".", ".", ".", "9", "."],
          [".", ".", ".", "5", "6", ".", ".", ".", "."],
          ["4", ".", "3", ".", ".", ".", ".", ".", "1"],
          [".", ".", ".", "7", ".", ".", ".", ".", "."],
          [".", ".", ".", "5", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", "."]])
